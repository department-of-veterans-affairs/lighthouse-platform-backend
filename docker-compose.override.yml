version: "3.8"

services:
  kong-migrations: &kong_migrations
    image: kong:2.3.2
    command: kong migrations bootstrap && kong migrations up && kong migrations finish
    depends_on: &kong_db_service [kong-database]
    environment:
      - &kong_db KONG_DATABASE=postgres
      - &kong_pg_host KONG_PG_HOST=kong-database
      - &kong_pg_db KONG_PG_DATABASE=kong
      - &kong_pg_pw KONG_PG_PASSWORD=kong
      - &kong_pg_user KONG_PG_USER=kong
    restart: &kong-restart on-failure

  prod-kong-migrations:
    <<: *kong_migrations
    depends_on: &kong_prod_db_service [prod-kong-database]
    environment:
      - *kong_db
      - *kong_pg_pw
      - *kong_pg_user
      - *kong_pg_db
      - &kong-prod-pg-host KONG_PG_HOST=prod-kong-database

  kong-database: &kong_database
    image: postgres:9.6
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 60s
      timeout: 5s
      retries: 5

  prod-kong-database:
    <<: *kong_database

  kong: &kong
    image: kong:2.3.2
    depends_on: *kong_db_service
    environment:
      - *kong_db
      - *kong_pg_host
      - *kong_pg_db
      - *kong_pg_pw
      - &kong_admin_listen KONG_ADMIN_LISTEN=0.0.0.0:8001
      - &kong_admin_access KONG_ADMIN_ACCESS_LOG='/dev/stdout'
      - &kong_admin_error KONG_ADMIN_ERROR_LOG='/dev/stderr'
    ports:
      - "4000:8000"
      - "4001:8001"
    expose: &kong_expose
      - 8000
      - 8001
    healthcheck: &kong_healthcheck
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8000 || exit 1"]
      interval: 5s
      retries: 10
    command: ["kong", "docker-start"]
    restart: *kong-restart

  prod-kong:
    <<: *kong
    depends_on: *kong_prod_db_service
    environment:
      - *kong_pg_db
      - *kong-prod-pg-host
      - *kong_pg_pw
      - *kong_admin_listen
      - *kong_admin_access
      - *kong_admin_error
    ports:
      - "4002:8000"
      - "4003:8001"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    expose:
      - 9200
      - 9300

  dynamodb:
    image: amazon/dynamodb-local:latest
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-inMemory"]

volumes:
  elasticsearch-data:
